Aufgabe:

1. Erstelle eine MySQL-Datenbank "authdb".
2. Erstelle auf "authdb" eine neue Tabelle "users" mit 
   3 Spalten: "id" (integer, autoincrement), "email" und
   "password".
3. Erstelle 3 Nutzer:
   "ralf@gmail.com", "ralfpw"
   "steffi@gmail.com", "steffipw"
   "sandra@yahoo.com", "sandrapw"
4. Erweitere Dein Authentication-Server so, dass sich alle
   Nutzer einloggen können und dass jeder Nutzer außer "ralf"
   auf "/content" zugreifen kann. Alle dürfen auf "/private" zugreifen.

   Aufgabe 2:

A Frontend:

1. Wenn der Nutzer ausgeloggt ist, soll ein neuer Navigationspunkt 
"Sign Up" erstellt werden.
2. Wenn der Nutzer auf "Sign Up" klickt, soll ein Formular erscheinen
mit einer Textbox für Email, Password und Passwort wiederholen. Desweiteren
soll ein Button "Jetzt registrieren" darunter erscheinen.
3. Wenn der Nutzer auf "Jetzt registrieren klickt, soll geprüft
werden, ob die beiden Passwörter identisch sind. 

B Backend:
1. Erstelle eine POST-Resource /signup die 2 Body-Parameter erwartet: email
und password. Falls es schon einen Nutzer mit der Email gibt, dann soll
ein aussagekräftiger Error zurückgeschickt werden. Falls es noch keinen
gibt, soll ein neuer Nutzer angelegt werden. Das Password soll aus
Sicherheitsgründen nicht in Klartext gespeichert werden und jeder Nutzer
bekommt einen randomstring(20)-Aktivierungscode und einen Timestamp "activated", der initial auf NULL gestellt wird. Speichere diese 
Informationen in der users-Tabelle auf der MySQL-Datenbank.
2. Wenn der Nutzer angelegt wurde, schicke eine Email an den Nutzer
mit dem Aktivierungscode in folgendem Format:
http://localhost:3000/activate/123456789
3. Erstelle eine GET-Resource /activate/:activationCode die einen
Request-Parameter activationCode erwartet. Der Nutzer mit dem passenden
activationCode soll aktiviert werden, also "activate" auf der Datenbank
soll auf den aktuellen Zeitpunkt (MySQL: now()) gesetzt werden.

C Frontend
1. Wenn der Nutzer auf "Jetzt registrieren" klickt, soll nun auch
ein Fetch-Request an /signup geschickt werden. Falls dieser erfolgreich war, soll dem Nutzer die Meldung angezeigt werden "Danke für Ihre Registrierung! Es wurde eine Email an $EMAIL geschickt.". Dazu soll
ein Link zur Startseite gezeigt werden.
2. Wenn der Nutzer eingeloggt ist, soll der "Sign Up"-Navigationspunkt nicht gezeigt werden.
3. Wenn der Nutzer auf den Aktivierungslink in seiner Email klickt und
auf die Aktivierungsseite /activate kommt, soll nun ansehnlicher HTML
gezeigt werden mit dem Text "Ihre Registrierung ist nun abgeschlossen!".

D Schwere Zusatzaufgaben
1. Erweitere C3 so, dass der Nutzer nach 5 Sekunden automatisch auf die Startseite umgeleitet wird. Des weiteren soll er nun auch automatisch
eingeloggt sein. 



Webpack

1. Integriere Webpack in Dein Miniblog-Projekt!